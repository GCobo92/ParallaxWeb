/*      FUNCTIONS       */

/// Function to control z-index array.
/// @param $layer - z-index name from $z-layers array (_variables.scss)
///
/// @example scss - Usage
///   .selector { z-index: z(above);}
///
/// @example css - CSS output
///   .selector { z-index: 9001;}
///
@function z($layer) {
    @return map-get($z-layers, $layer);
}

/// Function to keep consistency on font sizes
/// @param $font-size - font-size name from $size-vars array (_variables.scss)
///
/// @example scss - Usage
///   .selector { font-size: fs(x-small);}
///
/// @example css - CSS output
///   .selector { font-size: 12px;}
///
@function fs($font-size) {
    @return map-get($size-vars, $font-size);
}

/// Function to manage breakpoints array
/// @param $name - breakpoint name from $breakpoints array (_variables.scss)
///
/// @example scss - Usage
///     .box {
///	        width: breakpoint('phone-wide');
///     }
/// @example css - CSS output
///     .box {
///			width: 480px;
///	    }
@function breakpoint($name) {
    @return map_get($breakpoints, $name);
}

/// Remove the unit of a length
/// @param {Number} $number - Number to remove unit from
/// @return {Number} - Unitless number
@function strip-unit($number) {
    @if type-of($number)=='number' and not unitless($number) {
        @return $number / ($number * 0 + 1);
    }
    @return $number;
}

// Browser default font size value.
$browser-default-font-size: 16px !default;
// Base font size in rems value.
$rems-base-font-size: $browser-default-font-size / 100% * $html-font-size !default;



/// Rems calculator
/// @param {Number} $size - pixels value to convert in rem.
/// @param {Boolean} $reverse - to revert rem to px.
/// @return {Number} - em value or px depends on $reverse parameter.
@function rem($size, $reverse: false) {
    $html-font-size-units: if(str-index(#{$html-font-size}, 'px'), px, '%');
    $unitless: strip-unit($size);
    $unitless-base: strip-unit(if($html-font-size-units==px, $html-font-size, $rems-base-font-size));
    @if $reverse==false {
        @if $rems-on {
            @if str-index(#{$size}, 'px') {
                @return ($unitless / $unitless-base * 1rem);
            }
            @else if str-index(#{$size}, 'rem') {
                @return $size;
            }
        }
        @else {
            @if str-index(#{$size}, 'px') {
                @return $size;
            }
            @else if str-index(#{$size}, 'rem') {
                @return $unitless * $unitless-base * 1px;
            }
        }
    }
    @else {
        @return $unitless * $unitless-base * 1px;
    }
}

/// Convert px to em.
/// @param {Number} $size - pixels value to convert in em.
/// @return {Number} - em value.
@function em($size) {
    $size: if(str-index(#{$size}, 'rem'), rem($size, true), $size);
    $unitless: strip-unit($size);
    $unitless-base: strip-unit($browser-default-font-size);
    @if $media-query-units==em {
        @return $unitless / $unitless-base * 1em;
    }
    @else {
        @return $size;
    }
}